[{"D:\\gitgallop\\client\\src\\index.js":"1","D:\\gitgallop\\client\\src\\App.js":"2","D:\\gitgallop\\client\\src\\reportWebVitals.js":"3","D:\\gitgallop\\client\\src\\components\\navbar.jsx":"4","D:\\gitgallop\\client\\src\\components\\profile.jsx":"5","D:\\gitgallop\\client\\src\\components\\leftPane.jsx":"6","D:\\gitgallop\\client\\src\\components\\rightPane.jsx":"7","D:\\gitgallop\\client\\src\\components\\users.jsx":"8","D:\\gitgallop\\client\\src\\components\\cards.jsx":"9","D:\\gitgallop\\client\\src\\components\\timeline.jsx":"10","D:\\gitgallop\\client\\src\\components\\icons.jsx":"11","D:\\gitgallop\\client\\src\\components\\friend.jsx":"12","D:\\gitgallop\\client\\src\\components\\login.jsx":"13","D:\\gitgallop\\client\\src\\components\\loading.jsx":"14"},{"size":567,"mtime":1610736784943,"results":"15","hashOfConfig":"16"},{"size":4056,"mtime":1611511251062,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":5647,"mtime":1611436229310,"results":"19","hashOfConfig":"16"},{"size":1538,"mtime":1611436195806,"results":"20","hashOfConfig":"16"},{"size":5326,"mtime":1611478776637,"results":"21","hashOfConfig":"16"},{"size":9157,"mtime":1611511325021,"results":"22","hashOfConfig":"16"},{"size":3453,"mtime":1611511344950,"results":"23","hashOfConfig":"16"},{"size":5658,"mtime":1611437297875,"results":"24","hashOfConfig":"16"},{"size":5382,"mtime":1611436107787,"results":"25","hashOfConfig":"16"},{"size":2037,"mtime":1610591398518,"results":"26","hashOfConfig":"16"},{"size":459,"mtime":1610667225947,"results":"27","hashOfConfig":"16"},{"size":1925,"mtime":1611511295374,"results":"28","hashOfConfig":"16"},{"size":291,"mtime":1611473243661,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1fqmvkg",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},"D:\\gitgallop\\client\\src\\index.js",[],["66","67"],"D:\\gitgallop\\client\\src\\App.js",["68","69"],"import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport PrimarySearchAppBar from \"./components/navbar\";\nimport Profile from \"./components/profile\";\nimport Login from \"./components/login\";\nimport Loading from \"./components/loading\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nconst config = require(\"./config.json\");\nconst apiUrl = config.apiUrl;\n\nclass App extends Component {\n  state = {\n    access_token: \"\",\n    error: false,\n    username: \"\",\n    loading: true,\n  };\n\n  async componentDidMount() {\n    // console.log(process.env, config);\n    // localStorage.setItem(\"access_token\", \"testing\");\n    const access_token = Cookies.get(\"access_token\");\n\n    if (access_token) {\n      this.setState({ access_token });\n      const { data: username } = await axios.get(\n        apiUrl + \"/auth/verify/\" + access_token\n      );\n      if (username) {\n        this.setState({ username });\n        Cookies.set(\"username\", username);\n        // console.log(username);\n      } else {\n        this.setState({ error: true });\n      }\n    }\n    this.setState({ loading: false });\n  }\n\n  render() {\n    // console.log(this.state);\n    if (this.state.loading) return <Loading></Loading>;\n\n    if (!this.state.access_token) {\n      return <Login invalid={this.state.error}></Login>;\n    }\n    if (!this.state.username) {\n      return <Login invalid={this.state.error}></Login>;\n    }\n\n    return (\n      <React.Fragment>\n        <PrimarySearchAppBar></PrimarySearchAppBar>\n\n        <main\n          style={{\n            marginTop: \"78px\",\n            width: \"100%\",\n            padding: \"0\",\n            height: \"100vh\",\n          }}\n        >\n          {/* <Profile username={this.state.username}></Profile> */}\n          <Switch>\n            <Route\n              path=\"/:user/friends\"\n              render={(props) => (\n                <Profile\n                  page=\"friends\"\n                  username={this.state.username}\n                  {...props}\n                ></Profile>\n              )}\n            ></Route>\n            <Route\n              path=\"/:user/followers\"\n              render={(props) => (\n                <Profile\n                  page=\"followers\"\n                  username={this.state.username}\n                  {...props}\n                ></Profile>\n              )}\n            ></Route>\n            <Route\n              path=\"/:user/following\"\n              render={(props) => (\n                <Profile\n                  page=\"following\"\n                  username={this.state.username}\n                  {...props}\n                ></Profile>\n              )}\n            ></Route>\n            <Route\n              path=\"/:user/repos\"\n              render={(props) => (\n                <Profile\n                  page=\"repos\"\n                  username={this.state.username}\n                  {...props}\n                ></Profile>\n              )}\n            ></Route>\n            <Route\n              path=\"/:user/starred\"\n              render={(props) => (\n                <Profile\n                  page=\"starred\"\n                  username={this.state.username}\n                  {...props}\n                ></Profile>\n              )}\n            ></Route>\n            <Route\n              path=\"/:user/activity\"\n              render={(props) => (\n                <Profile\n                  page=\"activity\"\n                  username={this.state.username}\n                  {...props}\n                ></Profile>\n              )}\n            ></Route>\n            <Route\n              path=\"/:user\"\n              render={(props) => (\n                <Profile\n                  page=\"home\"\n                  username={this.state.username}\n                  {...props}\n                ></Profile>\n              )}\n            ></Route>\n            <Redirect to={\"/\" + this.state.username}></Redirect>\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","D:\\gitgallop\\client\\src\\reportWebVitals.js",[],"D:\\gitgallop\\client\\src\\components\\navbar.jsx",["70"],"// import React from \"react\";\r\nimport React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Cookies from \"js-cookie\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport \"./navbar.css\";\r\nimport { Input, InputGroup, InputLeftElement } from \"@chakra-ui/react\";\r\nimport { SearchIcon } from \"@chakra-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#212121\",\r\n    },\r\n    secondary: {\r\n      main: \"#eb5a1c\",\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = (theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n\r\n  search: {\r\n    position: \"relative\",\r\n    marginRight: theme.spacing(0),\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(104),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    // inputProps={{ spellCheck: 'false' }}\r\n    color: \"#f57f4c\",\r\n    // marginLeft: \"0\",\r\n    alignSelf: \"left\",\r\n    // fontFamily: \"Noto Sans JP, sans-serif\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n  input: {\r\n    color: \"white\",\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    // paddingLeft: theme.spacing(2),\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n      // marginLeft: theme.spacing(1),\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n});\r\n\r\nclass PrimarySearchAppBar extends Component {\r\n  // export default function PrimarySearchAppBar() {\r\n  state = {\r\n    search: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const search = e.currentTarget.value;\r\n    this.setState({ search });\r\n    // console.log(this.state);\r\n  };\r\n\r\n  handlePress = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      try {\r\n        const { data } = await axios.get(\r\n          \"https://api.github.com/users/\" + this.state.search,\r\n          {\r\n            headers: {\r\n              Authorization: \"token \" + Cookies.get(\"access_token\"),\r\n            },\r\n          }\r\n        );\r\n        // console.log(data);\r\n        this.props.history.push(\"/\" + data.login);\r\n        window.location.reload();\r\n      } catch (ex) {\r\n        // console.log(ex);\r\n        if (ex.response && ex.response.status === 404) {\r\n          toast.error(\"Github user not found!\");\r\n        } else {\r\n          toast.error(\"An unexpected error occured!\");\r\n        }\r\n      }\r\n    }\r\n    // this.props.history.push('/Bldgs');\r\n  };\r\n\r\n  handleLogout = () => {\r\n    Cookies.remove(\"access_token\");\r\n    window.location = \"/\";\r\n  };\r\n\r\n  render() {\r\n    // const classes = useStyles();\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.grow}>\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={3000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n        <AppBar style={{ backgroundColor: \"#333333\" }} position=\"fixed\">\r\n          <Toolbar>\r\n            <div\r\n              className=\"logo\"\r\n              style={{ marginLeft: \"7.1%\", marginTop: \"22px\" }}\r\n            >\r\n              {/* <Link to=\"/\" style={{ textDecoration: \"none\" }}> */}\r\n              <a href=\"/\" className=\"nostyle\">\r\n                <b>\r\n                  GI<span>T</span>GA<span>L</span>LOP\r\n                </b>\r\n                {/* </Link> */}\r\n              </a>\r\n            </div>\r\n            <div className={classes.search}>\r\n              <InputGroup>\r\n                <InputLeftElement\r\n                  pointerEvents=\"none\"\r\n                  children={<SearchIcon color=\"gray.300\" />}\r\n                />\r\n                <Input\r\n                  focusBorderColor=\"orange.400\"\r\n                  spellCheck=\"false\"\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  autoComplete=\"off\"\r\n                  onChange={this.handleChange}\r\n                  id=\"search\"\r\n                  name=\"search\"\r\n                  onKeyPress={this.handlePress}\r\n                />\r\n              </InputGroup>\r\n            </div>\r\n            <div className={classes.grow} />\r\n            <div className={classes.sectionDesktop}>\r\n              <IconButton style={{ color: \"#eb5a1c\" }}>\r\n                <ExitToAppIcon id=\"exit\" onClick={this.handleLogout} />\r\n              </IconButton>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(useStyles)(PrimarySearchAppBar));\r\n","D:\\gitgallop\\client\\src\\components\\profile.jsx",[],"D:\\gitgallop\\client\\src\\components\\leftPane.jsx",["71","72","73","74","75","76","77","78","79"],"import React, { Component } from \"react\";\r\nimport \"./leftPane.css\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nconst parse = require(\"parse-link-header\");\r\n\r\nclass LeftPane extends Component {\r\n  state = {\r\n    avatar_url: \"https://dummyimage.com/1024x1024/212121/212121\",\r\n    login: \"\",\r\n    bio: \"\",\r\n    followers: 0,\r\n    following: 0,\r\n    public_repos: 0,\r\n    public_gists: 0,\r\n    created_at: 0,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const username = this.props.user;\r\n    try {\r\n      let { data: user } = await axios.get(\r\n        \"https://api.github.com/users/\" + username,\r\n        {\r\n          headers: {\r\n            Authorization: \"token \" + Cookies.get(\"access_token\"),\r\n          },\r\n        }\r\n      );\r\n      const state = (({\r\n        avatar_url,\r\n        login,\r\n        bio,\r\n        followers,\r\n        following,\r\n        public_repos,\r\n        public_gists,\r\n        created_at,\r\n      }) => ({\r\n        avatar_url,\r\n        login,\r\n        bio,\r\n        followers,\r\n        following,\r\n        public_repos,\r\n        public_gists,\r\n        created_at,\r\n      }))(user);\r\n\r\n      const starred_call = await axios.get(\r\n        \"https://api.github.com/users/\" + username + \"/starred?per_page=1\",\r\n        {\r\n          headers: {\r\n            Authorization: \"token \" + Cookies.get(\"access_token\"),\r\n          },\r\n        }\r\n      );\r\n      let starred = starred_call.data.length;\r\n      if (starred_call.headers.link) {\r\n        const { last } = parse(starred_call.headers.link);\r\n        starred = parseInt(last.page);\r\n      }\r\n      state.starred = starred;\r\n      this.setState(state);\r\n    } catch (ex) {\r\n      window.location = \"/\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      avatar_url,\r\n      login,\r\n      bio,\r\n      followers,\r\n      following,\r\n      public_repos,\r\n      created_at,\r\n      public_gists,\r\n      starred,\r\n    } = this.state;\r\n    const duration = Math.round(\r\n      (Date.now() - new Date(created_at)) / 1000 / 60 / 60 / 24 / 365\r\n    );\r\n    const username = this.props.user;\r\n    return (\r\n      <div id=\"leftpane\">\r\n        <div id=\"box1\">\r\n          <a href={\"/\" + username} className=\"nostyle\">\r\n            <img id=\"image\" src={avatar_url + \".png\"}></img>\r\n          </a>\r\n          <br></br>\r\n        </div>\r\n        <a\r\n          href={\"https://github.com/\" + login}\r\n          target=\"_blank\"\r\n          className=\"nostyle\"\r\n        >\r\n          <div id=\"box2\">@{login} on Github</div>\r\n        </a>\r\n        <div id=\"box3\">\r\n          <p id=\"line3\">\r\n            <br></br>\r\n            <span id=\"bio\">\r\n              <a\r\n                href={\"https://github.com/\" + login}\r\n                target=\"_blank\"\r\n                className=\"nostyle\"\r\n              >\r\n                {bio || \"No bio listed :(\"}\r\n              </a>\r\n            </span>\r\n            <br></br>\r\n            <span id=\"followers\">\r\n              <a\r\n                href={\"https://github.com/\" + login + \"?tab=followers\"}\r\n                target=\"_blank\"\r\n                className=\"nostyle\"\r\n              >\r\n                <b>{followers}</b> followers &ensp;{\" \"}\r\n              </a>\r\n            </span>{\" \"}\r\n            <span id=\"bar\">|</span>{\" \"}\r\n            <span id=\"following\">\r\n              <a\r\n                href={\"https://github.com/\" + login + \"?tab=following\"}\r\n                target=\"_blank\"\r\n                className=\"nostyle\"\r\n              >\r\n                &ensp; <b>{following}</b> following\r\n              </a>\r\n            </span>\r\n            <br></br>\r\n            <span id=\"repos\">\r\n              <a\r\n                href={\"https://github.com/\" + login + \"?tab=repositories\"}\r\n                target=\"_blank\"\r\n                className=\"nostyle\"\r\n              >\r\n                <b>{public_repos}</b> public repositories\r\n              </a>\r\n            </span>\r\n            <br></br>\r\n            <span id=\"gists\">\r\n              <a\r\n                href={\"https://gist.github.com/\" + login}\r\n                target=\"_blank\"\r\n                className=\"nostyle\"\r\n              >\r\n                <b>{public_gists}</b> public gists\r\n              </a>\r\n            </span>\r\n            <br></br>\r\n            <span id=\"starred\">\r\n              <a\r\n                href={\"https://github.com/\" + login + \"?tab=stars\"}\r\n                target=\"_blank\"\r\n                className=\"nostyle\"\r\n              >\r\n                Starred <b>{starred}</b> times{\" \"}\r\n              </a>\r\n            </span>\r\n            <br></br>\r\n            <span id=\"duration\">\r\n              <a\r\n                href={\"https://github.com/\" + login}\r\n                target=\"_blank\"\r\n                className=\"nostyle\"\r\n              >\r\n                Member for <b>{duration}</b> years\r\n              </a>\r\n            </span>\r\n            <br></br>\r\n          </p>\r\n          <br></br>\r\n          {this.props.return && (\r\n            <a href={\"/\" + username} className=\"nostyle\">\r\n              {/* <Link to={\"/\" + username} style={{ textDecoration: \"none\" }}> */}\r\n              <div id=\"box2\">Return to profile page</div>\r\n              {/* </Link> */}\r\n            </a>\r\n          )}\r\n          {!this.props.return && <div id=\"box22\">Return to profile page</div>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeftPane;\r\n","D:\\gitgallop\\client\\src\\components\\rightPane.jsx",["80","81","82"],"D:\\gitgallop\\client\\src\\components\\users.jsx",["83"],"D:\\gitgallop\\client\\src\\components\\cards.jsx",["84","85"],"import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport \"./cards.css\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nconst parse = require(\"parse-link-header\");\r\n\r\nclass Cards extends Component {\r\n  state = {\r\n    header: \"\",\r\n    repos: [],\r\n    all_repos: [],\r\n    currentPage: 1,\r\n    more: false,\r\n    link: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const username = this.props.user;\r\n      const page = this.props.page;\r\n      const { data: all_repos } = await axios.get(\r\n        \"https://api.github.com/users/\" +\r\n          username +\r\n          \"/\" +\r\n          page +\r\n          \"?per_page=96\",\r\n        {\r\n          headers: {\r\n            Authorization: \"token \" + Cookies.get(\"access_token\"),\r\n          },\r\n        }\r\n      );\r\n      const repos = all_repos.slice(0, 12);\r\n      const state = { ...this.state };\r\n      state.repos = repos;\r\n      state.all_repos = all_repos;\r\n      if (page === \"repos\") {\r\n        const { data: user } = await axios.get(\r\n          \"https://api.github.com/users/\" + username,\r\n          {\r\n            headers: {\r\n              Authorization: \"token \" + Cookies.get(\"access_token\"),\r\n            },\r\n          }\r\n        );\r\n        if (user.public_repos > 96) state.more = true;\r\n        state.link = \"https://github.com/\" + username + \"?tab=repositories\";\r\n        state.header = \"Public repositories »\";\r\n      } else {\r\n        const starred_call = await axios.get(\r\n          \"https://api.github.com/users/\" + username + \"/starred?per_page=1\",\r\n          {\r\n            headers: {\r\n              Authorization: \"token \" + Cookies.get(\"access_token\"),\r\n            },\r\n          }\r\n        );\r\n        let starred = starred_call.data.length;\r\n        if (starred_call.headers.link) {\r\n          const { last } = parse(starred_call.headers.link);\r\n          starred = parseInt(last.page);\r\n        }\r\n        if (starred > 96) state.more = true;\r\n        state.link = \"https://github.com/\" + username + \"?tab=stars\";\r\n        state.header = \"Starred repositories »\";\r\n      }\r\n      this.setState(state);\r\n    } catch (ex) {\r\n      window.location = \"/\";\r\n    }\r\n  }\r\n\r\n  handleChange = (event, page) => {\r\n    let state = { ...this.state };\r\n    state.currentPage = page;\r\n    state.repos = state.all_repos.slice((page - 1) * 12, page * 12);\r\n    this.setState(state);\r\n  };\r\n\r\n  render() {\r\n    const { header, repos, all_repos } = this.state;\r\n    const numPages = Math.ceil(all_repos.length / 12);\r\n    return (\r\n      <div>\r\n        <p id=\"header\">{header}</p>\r\n        <br></br>\r\n        <Grid container spacing={2}>\r\n          {repos.map(\r\n            (repo) =>\r\n              repo && (\r\n                <Grid item xs={4} key={repo.name}>\r\n                  <div id=\"card\" key={repo.name}>\r\n                    <span id=\"content\" key={repo.name}>\r\n                      <b id=\"name\" key={repo.name}>\r\n                        <a\r\n                          href={repo.html_url}\r\n                          target=\"_blank\"\r\n                          className=\"nostyle\"\r\n                        >\r\n                          {repo.name}\r\n                        </a>\r\n                      </b>\r\n                      <br></br>\r\n                      <span id=\"details\" key={repo.name + \"2\"}>\r\n                        <span className=\"tags\" id=\"lang\" key={repo.name}>\r\n                          <i\r\n                            className=\"fa fa-code\"\r\n                            aria-hidden=\"true\"\r\n                            key={repo.name}\r\n                          ></i>{\" \"}\r\n                          {repo.language || \"Unlisted\"}\r\n                        </span>\r\n                        <span className=\"tags\" id=\"forks\" key={repo.name + \"3\"}>\r\n                          <i\r\n                            className=\"fa fa-code-fork\"\r\n                            aria-hidden=\"true\"\r\n                            key={repo.name}\r\n                          ></i>{\" \"}\r\n                          {repo.forks}\r\n                        </span>\r\n                        <span className=\"tags\" id=\"stars\" key={repo.name + \"4\"}>\r\n                          <i\r\n                            className=\"fa fa-star\"\r\n                            aria-hidden=\"true\"\r\n                            key={repo.name}\r\n                          ></i>{\" \"}\r\n                          {repo.stargazers_count}\r\n                        </span>\r\n                      </span>\r\n                    </span>\r\n                  </div>\r\n                </Grid>\r\n              )\r\n          )}\r\n          <Grid item xs={12} align=\"center\">\r\n            {repos.length === 0 && <p id=\"nonelisted\">No repos here!</p>}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          align=\"center\"\r\n          alignContent=\"center\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={12}></Grid>\r\n          {numPages > 1 && (\r\n            <div id=\"pagination\">\r\n              <Pagination\r\n                count={numPages}\r\n                variant=\"outlined\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n          )}\r\n          {this.state.more && (\r\n            <Grid item xs={12}>\r\n              <span id=\"viewmore\">\r\n                <a href={this.state.link} target=\"_blank\" className=\"nostyle\">\r\n                  View all »\r\n                </a>\r\n              </span>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cards;\r\n","D:\\gitgallop\\client\\src\\components\\timeline.jsx",["86","87","88","89","90"],"import React, { Component } from \"react\";\r\nimport \"./timeline.css\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  VerticalTimeline,\r\n  VerticalTimelineElement,\r\n} from \"react-vertical-timeline-component\";\r\nimport \"react-vertical-timeline-component/style.min.css\";\r\nimport {\r\n  Gollum,\r\n  Member,\r\n  Release,\r\n  Sponsor,\r\n  Comment,\r\n  Delete,\r\n  Push,\r\n  Issue,\r\n  Fork,\r\n  Pull,\r\n  Public,\r\n  Create,\r\n  Watch,\r\n} from \"./icons\";\r\nimport axios from \"axios\";\r\n\r\nclass Timeline extends Component {\r\n  state = {\r\n    login: \"hansinahuja\",\r\n    activity: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const username = this.props.user;\r\n      const { data } = await axios.get(\r\n        \"https://api.github.com/users/\" +\r\n          username +\r\n          \"/events/public?per_page=25\",\r\n        {\r\n          headers: {\r\n            Authorization: \"token \" + Cookies.get(\"access_token\"),\r\n          },\r\n        }\r\n      );\r\n      let state = { ...this.state };\r\n      const events = [];\r\n      for (let key in data) {\r\n        let y = {\r\n          type: data[key].type,\r\n          created_at: data[key].created_at,\r\n          repo: data[key].repo.name,\r\n        };\r\n        events.push(y);\r\n      }\r\n      state.activity = events;\r\n      state.link = \"https://github.com/\" + username + \"?tab=overview\";\r\n      this.setState(state);\r\n    } catch (ex) {\r\n      window.location = \"/\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { login, activity } = this.state;\r\n    return (\r\n      <div style={{ overflow: \"auto\", maxHeight: \"100vh\" }}>\r\n        <p id=\"header\">Recent activity »</p>\r\n        <br></br>\r\n        {activity.length === 0 && (\r\n          <span id=\"empty\">\r\n            No recent activity :(<br></br>\r\n          </span>\r\n        )}\r\n        {activity.length > 0 && (\r\n          <VerticalTimeline\r\n            className=\"custom-line\"\r\n            lineColor=\"black\"\r\n            layout=\"1-column-left\"\r\n          >\r\n            {activity.map((action) => (\r\n              <VerticalTimelineElement\r\n                className=\"hover\"\r\n                contentStyle={{ background: \"#ffab52\", color: \"#000\" }}\r\n                contentArrowStyle={{ borderRight: \"7px solid #ffab52\" }}\r\n                iconStyle={{\r\n                  background: \"white\",\r\n                  color: \"#DB4200\",\r\n                  margin: \"auto\",\r\n                }}\r\n                icon={\r\n                  (action.type === \"GollumEvent\" && <Gollum />) ||\r\n                  (action.type === \"MemberEvent\" && <Member />) ||\r\n                  (action.type === \"ReleaseEvent\" && <Release />) ||\r\n                  (action.type === \"SponsorshipEvent\" && <Sponsor />) ||\r\n                  (action.type === \"CommitCommentEvent\" && <Comment />) ||\r\n                  (action.type === \"IssueCommentEvent\" && <Comment />) ||\r\n                  (action.type === \"PullRequestReviewCommentEvent\" && (\r\n                    <Comment />\r\n                  )) ||\r\n                  (action.type === \"DeleteEvent\" && <Delete />) ||\r\n                  (action.type === \"PushEvent\" && <Push />) ||\r\n                  (action.type === \"IssuesEvent\" && <Issue />) ||\r\n                  (action.type === \"ForkEvent\" && <Fork />) ||\r\n                  (action.type === \"PullRequestEvent\" && <Pull />) ||\r\n                  (action.type === \"PublicEvent\" && <Public />) ||\r\n                  (action.type === \"CreateEvent\" && <Create />) ||\r\n                  (action.type === \"WatchEvent\" && <Watch />)\r\n                }\r\n                key={action.created_at + \"1\"}\r\n              >\r\n                <span className=\"action\" key={action.created_at + \"2\"}>\r\n                  <a\r\n                    href={\"https://github.com/\" + action.repo}\r\n                    target=\"_blank\"\r\n                    className=\"nostyle\"\r\n                  >\r\n                    {action.type}\r\n                  </a>\r\n                </span>\r\n                <br></br>\r\n                <span className=\"link\" key={action.created_at + \"3\"}>\r\n                  <i className=\"fab fa-github\"></i>{\" \"}\r\n                  <a\r\n                    href={\"https://github.com/\" + action.repo}\r\n                    target=\"_blank\"\r\n                    className=\"nostyle\"\r\n                  >\r\n                    {action.repo}\r\n                  </a>\r\n                </span>\r\n                <br></br>\r\n                <span className=\"date\" key={action.created_at + \"4\"}>\r\n                  {\" \"}\r\n                  <i\r\n                    className=\"far fa-calendar-alt\"\r\n                    key={action.created_at + \"5\"}\r\n                  ></i>{\" \"}\r\n                  <a\r\n                    href={\"https://github.com/\" + action.repo}\r\n                    target=\"_blank\"\r\n                    className=\"nostyle\"\r\n                  >\r\n                    {action.created_at}\r\n                  </a>\r\n                </span>\r\n              </VerticalTimelineElement>\r\n            ))}\r\n          </VerticalTimeline>\r\n        )}\r\n        <span id=\"viewmore\">\r\n          <br></br>\r\n          <a href={this.state.link} target=\"_blank\" className=\"nostyle\">\r\n            View older activity »\r\n          </a>\r\n        </span>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timeline;\r\n","D:\\gitgallop\\client\\src\\components\\icons.jsx",["91"],"import React, { Component } from \"react\";\r\nimport \"./icons.css\";\r\n\r\nexport const Push = () => {\r\n  return (\r\n    <div className=\"logos\">\r\n      <i className=\"fab fa-pushed fa-2x push\"></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Pull = () => {\r\n  return (\r\n    <div className=\"logos\">\r\n      <i class=\"fab fa-creative-commons-share fa-2x pull\"></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Public = () => {\r\n  return (\r\n    <div className=\"logos\">\r\n      <i class=\"fas fa-globe-americas fa-2x public\"></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Issue = () => {\r\n  return (\r\n    <div className=\"logos\">\r\n      <i className=\"fas fa-exclamation-circle fa-2x issue\"></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Comment = () => {\r\n  return (\r\n    <div className=\"logos\">\r\n      <i className=\"fas fa-comment-alt fa-2x comment\"></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Delete = () => {\r\n  return (\r\n    <div className=\"logos\">\r\n      <i className=\"fas fa-trash-alt fa-2x delete\"></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Fork = () => {\r\n  return (\r\n    <div className=\"logos fork\">\r\n      <i class=\"fas fa-code-branch fa-2x fork\"></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Watch = () => {\r\n  return (\r\n    <div className=\"logos\">\r\n      <i class=\"fas fa-eye fa-2x watch\"></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Create = () => {\r\n  return (\r\n    <div className=\"logos\">\r\n      <i class=\"fas fa-plus-circle fa-2x create\"></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Release = () => {\r\n  return (\r\n    <div className=\"logos\">\r\n      <i class=\"fas fa-lock-open fa-2x release\"></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Sponsor = () => {\r\n  return (\r\n    <div className=\"logos\">\r\n      <i class=\"fas fa-dollar-sign fa-2x sponsor\"></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Member = () => {\r\n  return (\r\n    <div className=\"logos\">\r\n      <i class=\"fas fa-user-shield fa-2x member\"></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Gollum = () => {\r\n  return (\r\n    <div className=\"logos\">\r\n      <i class=\"fas fa-info fa-2x gollum\"></i>\r\n    </div>\r\n  );\r\n};\r\n","D:\\gitgallop\\client\\src\\components\\friend.jsx",[],"D:\\gitgallop\\client\\src\\components\\login.jsx",[],"D:\\gitgallop\\client\\src\\components\\loading.jsx",["92"],"import React, { Component } from \"react\";\r\n\r\nclass Loading extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <img\r\n        src=\"https://i.imgur.com/7SqI6UB.gif\"\r\n        style={{ height: \"100%\", width: \"100%\" }}\r\n      ></img>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loading;\r\n",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":18},{"ruleId":"97","severity":1,"message":"101","line":3,"column":20,"nodeType":"99","messageId":"100","endLine":3,"endColumn":29},{"ruleId":"97","severity":1,"message":"102","line":18,"column":7,"nodeType":"99","messageId":"100","endLine":18,"endColumn":12},{"ruleId":"103","severity":1,"message":"104","line":90,"column":13,"nodeType":"105","endLine":90,"endColumn":55},{"ruleId":"106","severity":1,"message":"107","line":94,"column":9,"nodeType":"105","endLine":98,"endColumn":10},{"ruleId":"106","severity":1,"message":"107","line":105,"column":15,"nodeType":"105","endLine":109,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":115,"column":15,"nodeType":"105","endLine":119,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":125,"column":15,"nodeType":"105","endLine":129,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":135,"column":15,"nodeType":"105","endLine":139,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":145,"column":15,"nodeType":"105","endLine":149,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":155,"column":15,"nodeType":"105","endLine":159,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":165,"column":15,"nodeType":"105","endLine":169,"endColumn":16},{"ruleId":"97","severity":1,"message":"108","line":126,"column":15,"nodeType":"99","messageId":"100","endLine":126,"endColumn":18},{"ruleId":"97","severity":1,"message":"108","line":151,"column":15,"nodeType":"99","messageId":"100","endLine":151,"endColumn":18},{"ruleId":"97","severity":1,"message":"109","line":213,"column":11,"nodeType":"99","messageId":"100","endLine":213,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":104,"column":17,"nodeType":"105","endLine":104,"endColumn":79},{"ruleId":"106","severity":1,"message":"107","line":97,"column":25,"nodeType":"105","endLine":101,"endColumn":26},{"ruleId":"106","severity":1,"message":"107","line":162,"column":17,"nodeType":"105","endLine":162,"endColumn":79},{"ruleId":"97","severity":1,"message":"110","line":64,"column":13,"nodeType":"99","messageId":"100","endLine":64,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":112,"column":19,"nodeType":"105","endLine":116,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":123,"column":19,"nodeType":"105","endLine":127,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":138,"column":19,"nodeType":"105","endLine":142,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":152,"column":11,"nodeType":"105","endLine":152,"endColumn":73},{"ruleId":"97","severity":1,"message":"111","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"103","severity":1,"message":"104","line":7,"column":7,"nodeType":"105","endLine":10,"endColumn":8},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'theme' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'res' is assigned a value but never used.","'dummy' is assigned a value but never used.","'login' is assigned a value but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]